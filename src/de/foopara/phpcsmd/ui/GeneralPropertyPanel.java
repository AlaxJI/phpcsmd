package de.foopara.phpcsmd.ui;

import de.foopara.phpcsmd.generics.GenericOptionsPanel;
import de.foopara.phpcsmd.option.GeneralOptions;
import org.openide.util.Lookup;

/**
 *
 * @author n.specht
 */
public class GeneralPropertyPanel extends GenericOptionsPanel {

    private Lookup lkp;

    public GeneralPropertyPanel() {
        this(null);
    }
    /**
     * Creates new form GeneralPropertyPanel
     */
    public GeneralPropertyPanel(Lookup lkp) {
        super();
        this.lkp = lkp;
        initComponents();
        this.load();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        owIgnore = new javax.swing.JCheckBox();
        optIgnore = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(owIgnore, org.openide.util.NbBundle.getMessage(GeneralPropertyPanel.class, "GeneralPropertyPanel.owIgnore.text")); // NOI18N
        owIgnore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                owIgnoreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        add(owIgnore, gridBagConstraints);

        optIgnore.setText(org.openide.util.NbBundle.getMessage(GeneralPropertyPanel.class, "GeneralPropertyPanel.optIgnore.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        add(optIgnore, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(GeneralPropertyPanel.class, "GeneralPropertyPanel.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 2, 2);
        add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 2, 2);
        add(jSeparator2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void owIgnoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_owIgnoreActionPerformed
        this.updateForm();
    }//GEN-LAST:event_owIgnoreActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField optIgnore;
    private javax.swing.JCheckBox owIgnore;
    // End of variables declaration//GEN-END:variables

    @Override
    public void load() {
        owIgnore.setSelected(GeneralOptions.isOverwritten(GeneralOptions.Settings.IGNORE, this.lkp));
        optIgnore.setText((String)GeneralOptions.load(GeneralOptions.Settings.IGNORE, this.lkp));
        this.updateForm();
    }

    @Override
    public void save() {
        GeneralOptions.overwrite(GeneralOptions.Settings.IGNORE, owIgnore.isSelected() ? optIgnore.getText() : null, this.lkp);
    }

    @Override
    public boolean hasValidValues() {
        return true;
    }

    public void setLookup(Lookup lkp) {
        this.lkp = lkp;
    }

    private void updateForm() {
        boolean enabled = owIgnore.isSelected();
        optIgnore.setEnabled(enabled);
    }
}
